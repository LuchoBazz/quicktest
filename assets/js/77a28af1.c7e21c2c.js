"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[594],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,u=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,g=m["".concat(l,".").concat(f)]||m[f]||s[f]||u;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var u=n.length,o=new Array(u);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<u;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4924:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s}});var r=n(7462),a=n(3366),u=(n(7294),n(3905)),o=["components"],i={sidebar_position:5,title:"Setup subcommand",sidebar_label:"Setup"},l=void 0,c={unversionedId:"usage/setup",id:"usage/setup",title:"Setup subcommand",description:"quicktest setup config | qt setup config",source:"@site/docs/usage/setup.md",sourceDirName:"usage",slug:"/usage/setup",permalink:"/quicktest/docs/usage/setup",draft:!1,editUrl:"https://github.com/LuisMBaezCo/quicktest/tree/main/website/docs/usage/setup.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Setup subcommand",sidebar_label:"Setup"},sidebar:"tutorialSidebar",previous:{title:"Output",permalink:"/quicktest/docs/usage/output"},next:{title:"Example",permalink:"/quicktest/docs/usage/example"}},p={},s=[{value:"<code>quicktest setup config | qt setup config</code>",id:"quicktest-setup-config--qt-setup-config",level:3},{value:"Demo",id:"demo",level:3},{value:"Subcommand Structure",id:"subcommand-structure",level:3}],m={toc:s};function f(e){var t=e.components,i=(0,a.Z)(e,o);return(0,u.kt)("wrapper",(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h3",{id:"quicktest-setup-config--qt-setup-config"},(0,u.kt)("inlineCode",{parentName:"h3"},"quicktest setup config | qt setup config")),(0,u.kt)("p",null,"The list of accepted tags can be found by executing the following command"),(0,u.kt)("p",null,(0,u.kt)("inlineCode",{parentName:"p"},"quicktest setup config --help")),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-shell"},'quicktest setup config --label="Language::Cpp.PROGRAM" --value="g++"\nquicktest setup config --label="Language::Cpp.STANDARD" --value="-std=c++17"\nquicktest setup config --label="Language::Python.PROGRAM" --value="python"\n')),(0,u.kt)("p",null,"or shorter"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-shell"},'qt setup config -l "Language::Cpp.PROGRAM" -v="g++"\nqt setup config -l "Language::Cpp.STANDARD" -v="-std=c++17"\nqt setup config -l "Language::Python.PROGRAM" -v="python"\n')),(0,u.kt)("h3",{id:"demo"},"Demo"),(0,u.kt)("p",null,(0,u.kt)("img",{alt:"setup gif",src:n(7228).Z,width:"2051",height:"983"})),(0,u.kt)("h3",{id:"subcommand-structure"},"Subcommand Structure"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},(0,u.kt)("p",{parentName:"li"},(0,u.kt)("inlineCode",{parentName:"p"},"quicktest setup | qt setup")),(0,u.kt)("p",{parentName:"li"},"  ",(0,u.kt)("strong",{parentName:"p"},"Subcommand")),(0,u.kt)("ul",{parentName:"li"},(0,u.kt)("li",{parentName:"ul"},(0,u.kt)("p",{parentName:"li"},(0,u.kt)("inlineCode",{parentName:"p"},"config")," Subcommand that allows to change C++ settings"),(0,u.kt)("p",{parentName:"li"},"  ",(0,u.kt)("strong",{parentName:"p"},"Options")),(0,u.kt)("ul",{parentName:"li"},(0,u.kt)("li",{parentName:"ul"},(0,u.kt)("inlineCode",{parentName:"li"},"-l=<value> | --label=<value>")," Label with the path of the configuration that you want to change"),(0,u.kt)("li",{parentName:"ul"},(0,u.kt)("inlineCode",{parentName:"li"},"-v=<value> | --value=<value>")," value you want to change a selected label to")))))))}f.isMDXComponent=!0},7228:function(e,t,n){t.Z=n.p+"assets/images/setup-8b5338cef032311bb67e5de76c9e7a3b.gif"}}]);